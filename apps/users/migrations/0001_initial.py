# Generated by Django 3.2.25 on 2025-03-19 14:52

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('user_id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户ID')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='用户名')),
                ('email', models.EmailField(max_length=150, unique=True, verbose_name='邮箱')),
                ('mobile', models.CharField(max_length=11, unique=True, verbose_name='手机号')),
                ('name', models.CharField(max_length=100, verbose_name='姓名')),
                ('avatar', models.CharField(blank=True, max_length=200, null=True, verbose_name='头像')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='部门')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='职位')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('is_staff', models.BooleanField(default=False, verbose_name='是否员工')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='是否超级管理员')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='最后登录时间')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='加入时间')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('permission_id', models.AutoField(primary_key=True, serialize=False, verbose_name='权限ID')),
                ('permission_name', models.CharField(max_length=100, verbose_name='权限名称')),
                ('permission_code', models.CharField(max_length=100, unique=True, verbose_name='权限代码')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
            ],
            options={
                'verbose_name': '权限',
                'verbose_name_plural': '权限',
                'db_table': 'permissions',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('role_id', models.AutoField(primary_key=True, serialize=False, verbose_name='角色ID')),
                ('role_name', models.CharField(max_length=100, unique=True, verbose_name='角色名称')),
                ('role_code', models.CharField(max_length=100, unique=True, verbose_name='角色代码')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
            ],
            options={
                'verbose_name': '角色',
                'verbose_name_plural': '角色',
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('user_role_id', models.AutoField(primary_key=True, serialize=False, verbose_name='用户角色ID')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('role', models.ForeignKey(db_column='role_id', on_delete=django.db.models.deletion.CASCADE, to='users.role', verbose_name='角色')),
                ('user', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户角色',
                'verbose_name_plural': '用户角色',
                'db_table': 'user_roles',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('real_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='真实姓名')),
                ('gender', models.CharField(blank=True, choices=[('male', '男'), ('female', '女')], max_length=10, null=True, verbose_name='性别')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='生日')),
                ('address', models.CharField(blank=True, max_length=200, null=True, verbose_name='地址')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='个人简介')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '用户档案',
                'verbose_name_plural': '用户档案',
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='UserLoginLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP地址')),
                ('user_agent', models.CharField(max_length=255, verbose_name='用户代理')),
                ('login_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='登录时间')),
                ('login_type', models.CharField(choices=[('username', '用户名密码'), ('phone', '手机验证码'), ('social', '社交账号')], max_length=20, verbose_name='登录方式')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('remarks', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '登录日志',
                'verbose_name_plural': '登录日志',
                'db_table': 'user_login_log',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('role_permission_id', models.AutoField(primary_key=True, serialize=False, verbose_name='角色权限ID')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('permission', models.ForeignKey(db_column='permission_id', on_delete=django.db.models.deletion.CASCADE, to='users.permission', verbose_name='权限')),
                ('role', models.ForeignKey(db_column='role_id', on_delete=django.db.models.deletion.CASCADE, to='users.role', verbose_name='角色')),
            ],
            options={
                'verbose_name': '角色权限',
                'verbose_name_plural': '角色权限',
                'db_table': 'role_permissions',
            },
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['role_code'], name='roles_role_co_be68ba_idx'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['status'], name='roles_status_86510b_idx'),
        ),
        migrations.AddIndex(
            model_name='permission',
            index=models.Index(fields=['permission_code'], name='permissions_permiss_fee52e_idx'),
        ),
        migrations.AddIndex(
            model_name='permission',
            index=models.Index(fields=['status'], name='permissions_status_f0891e_idx'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['user', 'role'], name='user_roles_user_id_801a9e_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['status'], name='user_roles_status_f26420_idx'),
        ),
        migrations.AddIndex(
            model_name='rolepermission',
            index=models.Index(fields=['role', 'permission'], name='role_permis_role_id_29a93b_idx'),
        ),
        migrations.AddIndex(
            model_name='rolepermission',
            index=models.Index(fields=['status'], name='role_permis_status_8d7d52_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['username'], name='users_usernam_baeb4b_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['mobile'], name='users_mobile_6f2369_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_active'], name='users_is_acti_847b48_idx'),
        ),
    ]
