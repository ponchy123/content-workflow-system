# Generated by Django 3.2.25 on 2025-03-19 14:52

import apps.calculator.models
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BatchCalculationTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('task_id', models.CharField(max_length=36, unique=True, verbose_name='任务ID')),
                ('original_filename', models.CharField(blank=True, max_length=255, null=True, verbose_name='原始文件名')),
                ('original_file', models.CharField(max_length=255, verbose_name='原始文件路径')),
                ('total_records', models.IntegerField(default=0, verbose_name='总记录数')),
                ('processed_records', models.IntegerField(default=0, verbose_name='已处理记录数')),
                ('success_records', models.IntegerField(default=0, verbose_name='成功记录数')),
                ('error_records', models.IntegerField(default=0, verbose_name='错误记录数')),
                ('status', models.CharField(choices=[('PENDING', '等待处理'), ('PROCESSING', '处理中'), ('COMPLETED', '已完成'), ('FAILED', '处理失败'), ('CANCELLED', '已取消')], default='PENDING', max_length=20, verbose_name='状态')),
                ('error_file', models.CharField(blank=True, max_length=255, null=True, verbose_name='错误记录文件')),
                ('result_file', models.CharField(blank=True, max_length=255, null=True, verbose_name='结果文件')),
                ('current_chunk', models.IntegerField(default=0, verbose_name='当前处理块')),
                ('total_chunks', models.IntegerField(default=0, verbose_name='总块数')),
                ('priority', models.IntegerField(choices=[(0, '低'), (1, '中'), (2, '高')], default=1, verbose_name='优先级')),
                ('retry_count', models.IntegerField(default=0, verbose_name='重试次数')),
                ('max_retries', models.IntegerField(default=3, verbose_name='最大重试次数')),
                ('last_error', models.TextField(blank=True, null=True, verbose_name='最后错误信息')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='取消时间')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='过期时间')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
            ],
            options={
                'verbose_name': '批量计算任务',
                'verbose_name_plural': '批量计算任务',
                'db_table': 'batch_calculation_tasks',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Calculation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('request_id', models.CharField(max_length=32, unique=True, verbose_name='请求ID')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='实重')),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='长')),
                ('width', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='宽')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='高')),
                ('from_postal', models.CharField(max_length=10, verbose_name='起始邮编')),
                ('to_postal', models.CharField(max_length=10, verbose_name='目的邮编')),
                ('base_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='基础费用')),
                ('total_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='总费用')),
                ('volume_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='体积重')),
                ('chargeable_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='计费重量')),
                ('status', models.CharField(default='SUCCESS', max_length=20, verbose_name='状态')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='错误信息')),
                ('quantity', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='数量')),
                ('declared_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='申报价值')),
                ('fuel_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='燃油附加费')),
                ('other_fees', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='其他费用')),
                ('currency', models.CharField(default='CNY', max_length=3, verbose_name='货币')),
            ],
            options={
                'verbose_name': '运费计算',
                'verbose_name_plural': '运费计算',
                'db_table': 'calculations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CalculationDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('fee_type', models.CharField(choices=[('BASE', '基础运费'), ('FUEL', '燃油费'), ('REMOTE', '偏远费'), ('RETURN', '退件费'), ('OTHER', '其他费用')], max_length=10, verbose_name='费用类型')),
                ('fee_name', models.CharField(max_length=50, verbose_name='费用名称')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='金额')),
                ('rate', models.DecimalField(blank=True, decimal_places=2, help_text='百分比，如：12.5表示12.5%', max_digits=5, null=True, verbose_name='费率')),
                ('weight_used', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='计费重量')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='单价')),
                ('calculation_formula', models.TextField(blank=True, help_text='描述费用的计算过程', null=True, verbose_name='计算公式')),
                ('zone_info', models.JSONField(blank=True, help_text='区域相关的计费信息', null=True, verbose_name='区域信息')),
            ],
            options={
                'verbose_name': '计算明细',
                'verbose_name_plural': '计算明细',
                'db_table': 'calculation_details',
                'ordering': ['calculation', 'fee_type'],
            },
        ),
        migrations.CreateModel(
            name='CalculationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('request_id', models.CharField(max_length=32, unique=True, verbose_name='请求ID')),
                ('from_postal', models.CharField(max_length=10, verbose_name='起始邮编')),
                ('to_postal', models.CharField(max_length=10, verbose_name='目的邮编')),
                ('base_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='基础费用')),
                ('total_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='总费用')),
                ('volume_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='体积重')),
                ('status', models.CharField(default='SUCCESS', max_length=20, verbose_name='状态')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='错误信息')),
                ('request_type', models.CharField(choices=[('SINGLE', '单件计算'), ('BATCH', '批量计算')], max_length=20, verbose_name='请求类型')),
                ('order_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='下单时间')),
                ('zone', models.CharField(default='ZONE1', max_length=10, verbose_name='分区')),
                ('quantity', models.IntegerField(default=1, help_text='计算的件数', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(9999)], verbose_name='数量')),
                ('declared_value', models.DecimalField(decimal_places=2, help_text='货物申报价值', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='申报价值')),
                ('weight', models.DecimalField(decimal_places=2, help_text='包裹重量', max_digits=10, validators=[apps.calculator.models.validate_weight], verbose_name='重量')),
                ('length', models.DecimalField(decimal_places=2, help_text='包裹长度', max_digits=10, validators=[apps.calculator.models.validate_dimensions], verbose_name='长')),
                ('width', models.DecimalField(decimal_places=2, help_text='包裹宽度', max_digits=10, validators=[apps.calculator.models.validate_dimensions], verbose_name='宽')),
                ('height', models.DecimalField(decimal_places=2, help_text='包裹高度', max_digits=10, validators=[apps.calculator.models.validate_dimensions], verbose_name='高')),
                ('dimensional_weight', models.DecimalField(blank=True, decimal_places=2, help_text='根据尺寸计算的体积重', max_digits=10, null=True, verbose_name='体积重')),
                ('chargeable_weight', models.DecimalField(blank=True, decimal_places=2, help_text='实际计费重量', max_digits=10, null=True, verbose_name='计费重量')),
                ('fuel_surcharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='燃油附加费')),
                ('original_filename', models.CharField(blank=True, help_text='批量计算时的上传文件名', max_length=255, null=True, verbose_name='原始文件名')),
            ],
            options={
                'verbose_name': '计算请求',
                'verbose_name_plural': '计算请求',
                'db_table': 'calculation_requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FreightOrder',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('order_id', models.AutoField(primary_key=True, serialize=False, verbose_name='订单ID')),
                ('order_no', models.CharField(max_length=32, unique=True, verbose_name='订单号')),
                ('weight', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='重量')),
                ('length', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='长度')),
                ('width', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='宽度')),
                ('height', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='高度')),
                ('volume_weight', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='体积重')),
                ('charge_weight', models.DecimalField(decimal_places=3, max_digits=10, verbose_name='计费重量')),
                ('zone', models.CharField(max_length=10, verbose_name='分区')),
                ('base_fee', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='基础运费')),
                ('fuel_fee', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='燃油费')),
                ('remote_fee', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='偏远费')),
                ('peak_fee', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='旺季费')),
                ('other_fee', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='其他费用')),
                ('total_fee', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='总费用')),
                ('currency', models.CharField(max_length=3, verbose_name='货币单位')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
            ],
            options={
                'verbose_name': '运费订单',
                'verbose_name_plural': '运费订单',
                'db_table': 'freight_orders',
            },
        ),
        migrations.CreateModel(
            name='FreightOrderDetail',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='创建人')),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True, verbose_name='更新人')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='是否删除')),
                ('detail_id', models.AutoField(primary_key=True, serialize=False, verbose_name='明细ID')),
                ('fee_type', models.CharField(max_length=50, verbose_name='费用类型')),
                ('fee_name', models.CharField(max_length=100, verbose_name='费用名称')),
                ('fee_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='费用金额')),
                ('currency', models.CharField(max_length=3, verbose_name='货币单位')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('status', models.BooleanField(default=True, verbose_name='状态')),
                ('order', models.ForeignKey(db_column='order_id', on_delete=django.db.models.deletion.CASCADE, to='calculator.freightorder', verbose_name='订单')),
            ],
            options={
                'verbose_name': '运费订单明细',
                'verbose_name_plural': '运费订单明细',
                'db_table': 'freight_order_details',
            },
        ),
    ]
